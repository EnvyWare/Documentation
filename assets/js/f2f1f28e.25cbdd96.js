"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4569],{3093:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=n(4848),o=n(8453);const a={},i="Config",r={id:"mods/envyauras/config",title:"Config",description:"Configs",source:"@site/docs/mods/envyauras/config.md",sourceDirName:"mods/envyauras",slug:"/mods/envyauras/config",permalink:"/docs/mods/envyauras/config",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"modsSidebar",previous:{title:"EnvyAuras",permalink:"/docs/mods/envyauras/"},next:{title:"EnvyBattleTower",permalink:"/docs/mods/envybattletower/"}},c={},l=[];function d(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"config",children:"Config"}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Configs"}),(0,s.jsxs)(t.p,{children:["You can create new particle types by creating files in the ",(0,s.jsx)(t.code,{children:"config/EnvyAuras/auras"})," directory. Every\nfile in this directory will be loaded as a new aura type. Each aura type has an example that can be found\nin the ",(0,s.jsx)(t.code,{children:"config/EnvyAuras/auras/defaults"})," directory."]}),(0,s.jsx)(t.p,{children:"Example Aura:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"# \xa9 EnvyWare Ltd Software 2024\n# For assistance visit https://discord.envyware.co.uk\n\ndisplay-item:\n    enabled: true\n    type: minecraft:stone\n    amount: '1'\n    name: '&a&lExample 4!'\n    flags: []\n    lore: []\n    enchants: {}\n    nbt: {}\ndisplay-calculation:\n    calculation: tick % 10 == 0\nid: example4\ndisplay-name: '&a&lExample 4!'\naura:\n    id: wings\n    # This sets the particle type to use\n    particle-type: flame\n    # This sets the x coordinate for the center of the sphere. Use 'entityX' to use the entity's x coordinate\n    x-center-calculation:\n        calculation: entityX\n    # This sets the z coordinate for the center of the sphere. Use 'entityY' to use the entity's Y coordinate, 'random' to use a random number (0-1), and 'entityHeight' to use the entity's height\n    y-center-calculation:\n        calculation: entityY + (entityHeight / 2)\n    # This sets the z coordinate for the center of the sphere. Use 'entityZ' to use the entity's z coordinate\n    z-center-calculation:\n        calculation: entityZ\n    # This sets the size of the wings\n    size: 0.5\n    # This sets the amount of particles to generate\n    angle-delta: 0.01\n"})})]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var s=n(6540);const o={},a=s.createContext(o);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);