"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6842],{9444:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=t(4848),r=t(8453);const o={sidebar_position:1,sidebar_label:"Getting Started"},s="Getting Started",i={id:"api/Commands/getting-started",title:"Getting Started",description:"There is currently two ways of registering commands with the EnvyWare command API. But before we can register any commands you will need an instance of the CommandFactory interface.",source:"@site/docs/api/Commands/getting-started.md",sourceDirName:"api/Commands",slug:"/api/Commands/getting-started",permalink:"/docs/api/Commands/getting-started",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Getting Started"},sidebar:"apiSidebar",previous:{title:"Quick Start",permalink:"/docs/api/quick-start"},next:{title:"Annotation Based Commands",permalink:"/docs/api/Commands/annotation-based-commands"}},c={},d=[];function m(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsx)(n.p,{children:"There is currently two ways of registering commands with the EnvyWare command API. But before we can register any commands you will need an instance of the CommandFactory interface."}),"\n",(0,a.jsx)(n.p,{children:"The command factory handles all registering, parsing, and general platform level operations for the commands."}),"\n",(0,a.jsx)(n.p,{children:"You can get an instance of the CommandFactory for your platform like so:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class MainModClass {\n\n    private ForgePlayerManager playerManager = new ForgePlayerManager();\n    private ForgeCommandFactory commandFactory = new ForgeCommandFactory(ForgeAnnotationCommandParser::new, playerManager);\n\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"The above example is taken directly from EnvyGyms, and demonstrates getting an instance of the ForgeCommandFactory, using the annotation based parsing (which is currently the only parsing type that exists)."}),"\n",(0,a.jsxs)(n.p,{children:["Once you have this command factory you can then parse, and register commands using the ",(0,a.jsx)(n.code,{children:"CommandFactory#parse"}),", and ",(0,a.jsx)(n.code,{children:"CommandFactory#register"})," methods. \\"]}),"\n",(0,a.jsxs)(n.p,{children:["For velocity you will want to use the ",(0,a.jsx)(n.code,{children:"VelocityCommandFactory"})," and the ",(0,a.jsx)(n.code,{children:"VelocityAnnotationCommandParser"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(6540);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);