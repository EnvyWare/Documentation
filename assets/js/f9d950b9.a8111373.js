"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9241],{8453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>c});var n=s(6540);const o={},r=n.createContext(o);function d(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),n.createElement(r.Provider,{value:t},e.children)}},9242:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"mods/envybattletower/commands-and-permissions","title":"Commands & Permissions","description":"| Command                                                                                                                | Description                                                                                              | Permission                               |","source":"@site/docs/mods/envybattletower/commands-and-permissions.md","sourceDirName":"mods/envybattletower","slug":"/mods/envybattletower/commands-and-permissions","permalink":"/docs/mods/envybattletower/commands-and-permissions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"modsSidebar","previous":{"title":"EnvyBattleTower","permalink":"/docs/mods/envybattletower/"},"next":{"title":"Config","permalink":"/docs/mods/envybattletower/config"}}');var o=s(4848),r=s(8453);const d={},c="Commands & Permissions",i={},l=[];function a(e){const t={code:"code",h1:"h1",header:"header",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"commands--permissions",children:"Commands & Permissions"})}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Command"}),(0,o.jsx)(t.th,{children:"Description"}),(0,o.jsx)(t.th,{children:"Permission"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsxs)("p",{children:[(0,o.jsx)("code",{children:"/envybattletower"}),(0,o.jsx)("br",{}),(0,o.jsx)("code",{children:"/battletower"}),(0,o.jsx)("br",{}),(0,o.jsx)("code",{children:"/ebattletower"}),(0,o.jsx)("br",{}),(0,o.jsx)("code",{children:"/bt"})]})}),(0,o.jsx)(t.td,{children:"This command will open the battle tower GUI."}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"com.envyful.battletower.command"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"/bt reload"})}),(0,o.jsx)(t.td,{children:"This command will reload the config"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"com.envyful.battletower.command.reload"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"/bt validate"})}),(0,o.jsx)(t.td,{children:"This goes through all the battle towers and checks the pokepastes are valid for all the teams."}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"com.envyful.battle.tower.command.validate"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"/bt resetcooldown <player> <tower>"})}),(0,o.jsx)(t.td,{children:"This resets the player's cooldown for the given battle tower, allowing them to re-challenge immediately."}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"com.envyful.battle.tower.command.resetcooldown"})})]})]})]})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);